name: inject-sidecar

on:
  workflow_dispatch:
  push:

jobs:
  check-istio:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: get istioctl uri
        id: get-istioctl
        uses: istio/get-istioctl
        with:
          version: "1.*"
      - name: Get Istioctl
        run: |
          curl -o istioctl.tar.gz -fsLO ${{ steps.doit.outputs.istioctl-url }}
          tar -xzf istioctl.tar.gz
          ./istioctl version --remote=false
      - name: Inject Sidecar
        id: inject
        run: |
          export ISTIO_VERSION=${{ env.ISTIO_VERSION }}

          # hydrate isto manifest into configmap files
          ./istioctl manifest generate \
            -f istio/system/profile.yaml > manifests.yaml
          cat manifests.yaml | yq e '. | select(.kind == "ConfigMap" and .metadata.name =="istio-sidecar-injector") | .data.config' - > injector.yaml
          cat manifests.yaml | yq e '. | select(.kind == "ConfigMap" and .metadata.name =="istio-sidecar-injector") | .data.values' - > values.yaml
          cat manifests.yaml | yq e '. | select(.kind == "ConfigMap" and .metadata.name =="istio") | .data.mesh' - > mesh.yaml

          inject() {
            NAME="${1%.*}"
            echo "name =$NAME"
            EXTENSION="${1##*.}"
            echo "ext =$EXTENSION"
            ./istio-${ISTIO_VERSION}/bin/istioctl kube-inject \
                               --injectConfigFile injector.yaml \
                                --meshConfigFile mesh.yaml \
                                --valuesFile values.yaml \
                               -f $1 -o $NAME.gen.$EXTENSION
          }

          export -f inject

          find . -not -path "*/istio-$ISTIO_VERSION/*" \
                 -not -path "*/.git*/*" -not -path "*/clusters/*" -name "*.yaml" \
                 -not -path "*/istio/operator/manifests.yaml" -name "*deployment.yaml" \
                 -print0 | xargs -0 -I{} bash -c "inject {}"

          rm manifests.yaml injector.yaml values.yaml mesh.yaml
          rm -rf ./istio-${ISTIO_VERSION}
          if [[ $(git diff --stat) != '' ]]; then
            echo ::set-output name=version::${ISTIO_VERSION}
          fi
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        if: steps.inject.outputs.version
        with:
          commit-message: Update Sidecars to ${{ env.ISTIO_VERSION }}
          title: Update Istio sidecar
          body: |
            Istio sidecar v${{ env.ISTIO_VERSION }}
          branch: update-sidecar
